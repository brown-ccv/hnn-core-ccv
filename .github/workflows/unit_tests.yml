name: Unit tests

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest]
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v4
      # - uses: conda-incubator/setup-miniconda@v3
      #   with:
      #     activate-environment: test
      #     python-version: ${{ matrix.python-version }}
      #     fetch-depth: 2
      - name: Install ubuntu dependencies
        shell: bash -el {0}
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            sudo add-apt-repository ppa:ubuntu-toolchain-r/test
            sudo apt-get update
            sudo apt-get install libopenmpi-dev openmpi-bin
          fi;
      - name: Install MacOs dependencies
        shell: bash -el {0}
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
              brew install open-mpi
          fi;
      - name: Install dependencies
        shell: bash -el {0}
        run: |
          python -m pip install --upgrade pip
          python -m pip install mpi4py openmpi
      - name: Check MPI version
        shell: bash -el {0}
        run: |
          mpiexec --version
      - name: Install HNN-core
        shell: bash -el {0}
        run: |
          pip install --verbose '.[opt, parallel, test, gui]'
      - name: Set Env Variables
        shell: bash -el {0}
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            echo "List /opt/homebrew/lib"
            ls /opt/homebrew/lib
            echo "MPI_LIB_NRN_PATH=/opt/homebrew/lib/libmpi.dylib" >> $GITHUB_ENV
          fi;
      - name: Run MPI application
        shell: bash -el {0}
        run: |
            mpiexec -np 2 python ./hnn_core/mpi_test.py
      - name: Verify NEURON installation
        shell: bash -el {0}
        run: |
          nrniv -python -nobanner -mpi -c "from neuron import h; print(h)"
      - name: Run MPI application with NEURON
        shell: bash -el {0}
        run: |
          mpiexec -np 2 -verbose nrniv -python -mpi -nobanner python ./hnn_core/mpi_test.py
      # - name: Lint with flake8
      #   shell: bash -el {0}
      #   run: |
      #     flake8 --count hnn_core
      - name: Test with pytest
        shell: bash -el {0}
        run: |
          python -m pytest ./hnn_core/tests/  --cov=hnn_core --cov-report=xml
      # - name:  Upload coverage to Codecov
      #   shell: bash -el {0}
      #   run: |
      #     bash <(curl -s https://codecov.io/bash) -f ./coverage.xml
