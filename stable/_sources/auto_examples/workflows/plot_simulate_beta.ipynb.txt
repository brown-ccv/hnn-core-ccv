{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "\n# 05. Simulate beta modulated ERP\n\nThis example demonstrates how event related potentials (ERP) are modulated\nby prestimulus beta events. Specifically, this example reproduces Figure 5\nfrom Law et al. 2021 [1]_. To be consistent with the publication, the default\nnetwork connectivity is altered. These modifications demonstrate a potential\nmechanism by which transient beta activity in the neocortex can suppress\nthe perceptibility of sensory input. This suppression depends on the timing\nof the beta event, and the incoming sensory information.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "# Authors: Nick Tolley <nicholas_tolley@brown.edu>\n\nfrom hnn_core import simulate_dipole, law_2021_model, jones_2009_model\nfrom hnn_core.viz import plot_dipole"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "We begin by instantiating the network model from Law et al. 2021 [1]_.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "net = law_2021_model()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The Law 2021 model is based on the network model described in\nJones et al. 2009 [2]_ with several important modifications. One of the most\nsignificant changes is substantially increasing the rise and fall time\nconstants of GABAb-conductances on L2 and L5 pyramidal. Another important\nchange is the removal of calcium channels from basal dendrites and soma of\nL5 pyramidal cells specifically.\nWe can inspect these properties with the ``net.cell_types`` attribute which\ncontains information on the biophysics and geometry of each cell.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "net_jones = jones_2009_model()\n\njones_rise = net_jones.cell_types['L5_pyramidal'].synapses['gabab']['tau1']\nlaw_rise = net.cell_types['L5_pyramidal'].synapses['gabab']['tau1']\nprint(f'GABAb Rise (ms): {jones_rise} -> {law_rise}')\n\njones_fall = net_jones.cell_types['L5_pyramidal'].synapses['gabab']['tau2']\nlaw_fall = net.cell_types['L5_pyramidal'].synapses['gabab']['tau2']\nprint(f'GABAb Fall (ms): {jones_fall} -> {law_fall}\\n')\n\nprint('Apical Dendrite Channels:')\nprint(net.cell_types['L5_pyramidal'].sections['apical_1'].mechs.keys())\nprint(\"\\nBasal Dendrite Channels ('ca' missing):\")\nprint(net.cell_types['L5_pyramidal'].sections['basal_1'].mechs.keys())"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "A major change to the Jones 2009 model is the addition of a\nMartinotti-like recurrent tuft connection [3]_. This new connection\noriginates from L5 basket cells, and provides GABAa inhibition on\nthe distal dendrites of L5 pyramidal cells.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "print('Recurrent Tuft Connection')\nprint(net.connectivity[16])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The remaining changes to the connectivity was the removal of an\nL2_basket -> L5_pyramidal GABAa connection, and replacing it with GABAb.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "print('New GABAb connection')\nprint(net.connectivity[15])\n\nprint('\\nConnection Removed from Law Model')\nprint(net_jones.connectivity[10])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To demonstrate sensory depression, we will add the drives necessary to\ngenerate and ERP similar to\n`evoked example <sphx_glr_auto_examples_plot_simulate_evoked.py>`,\nbut modified to reflect the parameters used in Law et al. 2021.\nSpecifically, we are considering the case where a tactile stimulus is\ndelivered at 150 ms. 25 ms later, the first input to sensory cortex arrives\nas a proximal drive to the cortical column. Proximal drive corresponds to\nprojections from the direct thalamic nuclei. This is followed by one\n:term:`distal` drive representing projections from indirect thalamic nuclei,\nand a final late proximal drive. It is important to note that the parameter\nvalues for each are different from previous examples of the evoked response.\nThis reflects the altered network dynamics due to the changes described\nabove.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "def add_erp_drives(net, stimulus_start):\n    # Distal evoked drive\n    weights_ampa_d1 = {'L2_basket': 0.0005, 'L2_pyramidal': 0.004,\n                       'L5_pyramidal': 0.0005}\n    weights_nmda_d1 = {'L2_basket': 0.0005, 'L2_pyramidal': 0.004,\n                       'L5_pyramidal': 0.0005}\n    syn_delays_d1 = {'L2_basket': 0.1, 'L2_pyramidal': 0.1,\n                     'L5_pyramidal': 0.1}\n    net.add_evoked_drive(\n        'evdist1', mu=70.0 + stimulus_start, sigma=0.0, numspikes=1,\n        weights_ampa=weights_ampa_d1, weights_nmda=weights_nmda_d1,\n        location='distal', synaptic_delays=syn_delays_d1, event_seed=274)\n\n    # Two proximal drives\n    weights_ampa_p1 = {'L2_basket': 0.002, 'L2_pyramidal': 0.0011,\n                       'L5_basket': 0.001, 'L5_pyramidal': 0.001}\n    syn_delays_prox = {'L2_basket': 0.1, 'L2_pyramidal': 0.1,\n                       'L5_basket': 1., 'L5_pyramidal': 1.}\n\n    # all NMDA weights are zero; pass None explicitly\n    net.add_evoked_drive(\n        'evprox1', mu=25.0 + stimulus_start, sigma=0.0, numspikes=1,\n        weights_ampa=weights_ampa_p1, weights_nmda=None,\n        location='proximal', synaptic_delays=syn_delays_prox, event_seed=544)\n\n    # Second proximal evoked drive. NB: only AMPA weights differ from first\n    weights_ampa_p2 = {'L2_basket': 0.005, 'L2_pyramidal': 0.005,\n                       'L5_basket': 0.01, 'L5_pyramidal': 0.01}\n    # all NMDA weights are zero; omit weights_nmda (defaults to None)\n    net.add_evoked_drive(\n        'evprox2', mu=135.0 + stimulus_start, sigma=0.0, numspikes=1,\n        weights_ampa=weights_ampa_p2, location='proximal',\n        synaptic_delays=syn_delays_prox, event_seed=814)\n\n    return net"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "A beta event is created by inducing simultaneous proximal and distal\ndrives. The input is just strong enough to evoke spiking in the\nL2 basket cells. This spiking causes GABAb mediated inhibition\nof the network, and ultimately suppressed sensory detection.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "def add_beta_drives(net, beta_start):\n    # Distal Drive\n    weights_ampa_d1 = {'L2_basket': 0.00032, 'L2_pyramidal': 0.00008,\n                       'L5_pyramidal': 0.00004}\n    syn_delays_d1 = {'L2_basket': 0.5, 'L2_pyramidal': 0.5,\n                     'L5_pyramidal': 0.5}\n    net.add_bursty_drive(\n        'beta_dist', tstart=beta_start, tstart_std=0., tstop=beta_start + 50.,\n        burst_rate=1., burst_std=10., numspikes=2, spike_isi=10,\n        n_drive_cells=10, location='distal', weights_ampa=weights_ampa_d1,\n        synaptic_delays=syn_delays_d1, event_seed=290)\n\n    # Proximal Drive\n    weights_ampa_p1 = {'L2_basket': 0.00004, 'L2_pyramidal': 0.00002,\n                       'L5_basket': 0.00002, 'L5_pyramidal': 0.00002}\n    syn_delays_p1 = {'L2_basket': 0.1, 'L2_pyramidal': 0.1,\n                     'L5_basket': 1.0, 'L5_pyramidal': 1.0}\n\n    net.add_bursty_drive(\n        'beta_prox', tstart=beta_start, tstart_std=0., tstop=beta_start + 50.,\n        burst_rate=1., burst_std=20., numspikes=2, spike_isi=10,\n        n_drive_cells=10, location='proximal', weights_ampa=weights_ampa_p1,\n        synaptic_delays=syn_delays_p1, event_seed=300)\n    return net"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "We can now use our functions to create three distinct simulations:\n1) beta event only, 2) ERP only, and 3) beta event + ERP.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "beta_start, stimulus_start = 50.0, 125.0\nnet_beta = net.copy()\nnet_beta = add_beta_drives(net_beta, beta_start)\n\nnet_erp = net.copy()\nnet_erp = add_erp_drives(net_erp, stimulus_start)\n\nnet_beta_erp = net_beta.copy()\nnet_beta_erp = add_erp_drives(net_beta_erp, stimulus_start)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "And finally we simulate. Note that the default simulation time has been\nincreased to 400 ms to observe the long time course over which beta events\ncan influence sensory input to the cortical column.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "dpls_beta = simulate_dipole(net_beta, tstop=400)\ndpls_erp = simulate_dipole(net_erp, tstop=400)\ndpls_beta_erp = simulate_dipole(net_beta_erp, tstop=400)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "By inspecting the activity during the beta event, we can see that spiking\noccurs exclusively at 50 ms, the peak of the gaussian distributed proximal\nand distal inputs. This spiking activity leads to sustained GABAb mediated\ninhibition of the L2 and L5 pyrmaidal cells. One effect of this inhibition\nis an asymmetric beta event with a long positive tail.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "import matplotlib.pyplot as plt\nimport numpy as np\nfig, axes = plt.subplots(4, 1, sharex=True, figsize=(7, 7),\n                         constrained_layout=True)\nnet_beta.cell_response.plot_spikes_hist(ax=axes[0], show=False)\naxes[0].set_title('Beta Event Generation')\nplot_dipole(dpls_beta, ax=axes[1], layer='agg', tmin=1.0, color='b', show=False)\nnet_beta.cell_response.plot_spikes_raster(ax=axes[2], show=False)\naxes[2].set_title('Spike Raster')\n\n# Create a fixed-step tiling of frequencies from 1 to 40 Hz in steps of 1 Hz\nfreqs = np.arange(10., 60., 1.)\ndpls_beta[0].plot_tfr_morlet(freqs, n_cycles=7, ax=axes[3])"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "Next we will inspect what happens when a sensory stimulus is delivered 75 ms\nafter a beta event. Note that the delay time for a tactile stimulus at the\nhand to arrive at the cortex is roughly 25 ms, which means the first proximal\ninput to the cortical column occurs ~100 ms after the beta event.\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "dpls_beta_erp[0].smooth(45)\nfig, axes = plt.subplots(3, 1, sharex=True, figsize=(7, 7),\n                         constrained_layout=True)\nplot_dipole(dpls_beta_erp, ax=axes[0], layer='agg', tmin=1.0, color='r',\n            show=False)\naxes[0].set_title('Beta Event + ERP')\nnet_beta_erp.cell_response.plot_spikes_hist(ax=axes[1], show=False)\naxes[1].set_title('Input Drives Histogram')\nnet_beta_erp.cell_response.plot_spikes_raster(ax=axes[2], show=False)\naxes[2].set_title('Spike Raster')"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "To help understand the effect of beta mediated inhibition on the response to\nincoming sensory stimuli, we can compare the ERP and spiking activity due to\nsensory input with and without a beta event.\nThe sustained inhibition of the network ultimately depresses\nthe sensory response which is associated with a reduced ERP amplitude\n\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "collapsed": false
      },
      "outputs": [],
      "source": [
        "dpls_erp[0].smooth(45)\nfig, axes = plt.subplots(3, 1, sharex=True, figsize=(7, 7),\n                         constrained_layout=True)\nplot_dipole(dpls_beta_erp, ax=axes[0], layer='agg', tmin=1.0, color='r',\n            show=False)\nplot_dipole(dpls_erp, ax=axes[0], layer='agg', tmin=1.0, color='b', show=False)\naxes[0].set_title('Beta ERP Comparison')\naxes[0].legend(['ERP + Beta', 'ERP'])\nnet_beta_erp.cell_response.plot_spikes_raster(ax=axes[1], show=False)\naxes[1].set_title('Beta + ERP Spike Raster')\nnet_erp.cell_response.plot_spikes_raster(ax=axes[2], show=False)\naxes[2].set_title('ERP Spike Raster')\nplt.show()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "## References\n.. [1] Law, R. G., Pugliese, S., Shin, H., Sliva, D. D., Lee, S.,\n       Neymotin, S., Moore, C., & Jones, S. R. (2021). Thalamocortical\n       mechanisms regulating the relationship between transient beta events\n       and human tactile perception. BioRxiv, 2021.04.16.440210.\n       https://doi.org/10.1101/2021.04.16.440210\n.. [2] Jones, S. R., Pritchett, D. L., Sikora, M. A., Stufflebeam, S. M.,\n       H\u00e4m\u00e4l\u00e4inen, M., & Moore, C. I. (2009). Quantitative Analysis and\n       Biophysically Realistic Neural Modeling of the MEG Mu Rhythm:\n       Rhythmogenesis and Modulation of Sensory-Evoked Responses. Journal of\n       Neurophysiology, 102(6), 3554\u20133572.\n       https://doi.org/10.1152/jn.00535.2009\n.. [3] Silberberg, G., & Markram, H. (2007). Disynaptic Inhibition between\n       Neocortical Pyramidal Cells Mediated by Martinotti Cells. Neuron,\n       53(5), 735\u2013746. https://doi.org/10.1016/j.neuron.2007.02.012\n\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.12.4"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}